library(tidyverse)
filename1 <- "exp_april_2022_RESULTS_2022-05-02-0622.csv"
filename2 <- "exp_april_2022_RESULTS_2022-05-09-0636.csv"
data1 <- read_csv2(filename1)
data2 <- read_csv2(filename2)
summary(data1)
max(data1$participant)
summary(data2)
data2.tmp <- data2 %>%
mutate(data2, participant = participant + max(data1$participant))
data2 <- data2.tmp
summary(data1)
summary(data2)
# data2$demographic1 <- as.numeric(data2$demographic1)
data3 <- bind_rows(data1, data2)
data3.tmp <- data3
data3.tmp$participant <- as.factor(data3.tmp$participant)
levels(data3.tmp$participant) <- paste(1:length(levels(data3.tmp$participant)), sep="")
data3 <- data3.tmp
summary(data3)
write_csv2(data3, "merged_results.csv")
data <- data3
data_demographics <- read_csv2("merged_demographics_cleaned.csv")
summary(data_demographics)
sd(data_demographics$demographic1, na.rm = TRUE)
data_demographics$participant <- as.factor(data_demographics$participant)
data_demographics2 <- data_demographics %>%
select(participant, region_Morava, age_under_27, reading_time_over_60_minutes, demographic1)
data.tmp <- data %>%
left_join(data_demographics2, by = "participant")
summary(data.tmp)
data <- data.tmp
items <- filter(data, grepl("^Accept", materials))
practice <- filter(data, grepl("^Practice", materials))
fillers_good <- filter(data, grepl("^Filler.*Good", materials))
fillers_bad <- filter(data, grepl("^Filler.*Bad", materials))
fillers <- filter(data, grepl("^Filler.*Bad", materials) | grepl("^Filler.*Good", materials))
nrow(fillers_good) + nrow (fillers_bad) == nrow (fillers)
nrow(items) + nrow(practice) + nrow(fillers) == nrow(data)
group_by(fillers, condition) %>%
summarise(mean(rating1), median = median(rating1))
by_participant_and_condition <- group_by(fillers, participant, condition)
diff_fillers <- summarise(by_participant_and_condition, mean = mean(rating1, na.rm=TRUE), SD = sd(rating1, na.rm=TRUE))
diff_fillers.tmp <- summarise(diff_fillers, difference = mean[2]-mean[1])
ggplot(data = diff_fillers.tmp) +
geom_point(mapping = aes(x = participant, y = difference))
vector_for_removing <- filter(diff_fillers.tmp, difference <= 3)
vector_for_removing$participant
clean_items <- filter(items, !(participant %in% vector_for_removing$participant))
clean_fillers <- filter(fillers, !(participant %in% vector_for_removing$participant))
((select(items, participant) %>%
unique %>%
nrow)-(select(clean_items, participant) %>%
unique %>%
nrow)==nrow(vector_for_removing))
items <- clean_items
fillers <- clean_fillers
items <- group_by(items, participant, condition)
items
summarise(items, mean_cond_accept = mean(rating1))
items <- group_by(items, condition)
summarise(items, mean_cond_accept = mean(rating1), median_cond_accept = median(rating1), sd_cond_accept = sd(rating1))
ggplot(items, aes(x = condition, y = rating1)) +
geom_boxplot()
items$classNExpr <- "Z"
items$classNExpr[items$condition == "ABott"|items$condition == "ATop"|items$condition == "basA"|items$condition == "EqA"|items$condition == "NRA"] <- "A"
p <- ggplot(items, aes(condition, rating1, fill = classNExpr)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, size=.3,
width=.2,
position=position_dodge(.9))
p  + labs(y = "acceptability") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17,face="bold"))
ggsave("error_bar.png", p)
items_without_probability <- items %>%
filter((condition != "ABott" & condition != "ATop" & condition != "ZBott" & condition != "ZTop")) %>%
group_by(participant)
p2 <- ggplot(items_without_probability, aes(condition, rating1, fill = classNExpr)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, size=.3,
width=.2,
position=position_dodge(.9))
p2  + labs(y = "acceptability") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17,face="bold"))
ggsave("error_bar_without_prob.png", p2)
ggsave("error_bar_without_prob.eps", p2)
items$condition <- as.factor(items$condition)
levels(items$condition)
library("lmerTest")
items$condition <- relevel(items$condition, ref="basZ")
m1 <- lmer(as.numeric(rating1) ~ condition + (1|participant) + (1|item), data=items)
summary(m1)
summary(items)
(2406/10)*6
items_without_probability <- items %>%
filter((condition != "ABott" & condition != "ATop" & condition != "ZBott" & condition != "ZTop")) %>%
group_by(participant)
items_without_probability$condition <- as.factor(items_without_probability$condition)
items_without_probability$classNExpr <- as.factor(items_without_probability$classNExpr)
levels(items_without_probability$condition)
items_without_probability$condition <- relevel(items_without_probability$condition, ref="basZ")
items_without_probability$condition2 <- "NA"
items_without_probability$condition2[items_without_probability$condition == "basA" | items_without_probability$condition == "basZ"] <- "bas"
items_without_probability$condition2[items_without_probability$condition == "NRA" | items_without_probability$condition == "NRZ"] <- "NR"
items_without_probability$condition2[items_without_probability$condition == "EqA" | items_without_probability$condition == "EqZ"] <- "Eq"
items_without_probability$condition <- items_without_probability$condition2
items_without_probability <- select(items_without_probability, -condition2)
m1 <- lmer(as.numeric(rating1) ~ condition * classNExpr + (1|participant) + (1|item), data=items_without_probability)
summary(m1)
summary(m1)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # o
summary(lm.D9)
summary(lm.D90)
m2 <- lm(as.numeric(rating1) ~ condition * classNExpr + (1|participant) + (1|item), data=items_without_probability)
m2 <- lm(as.numeric(rating1) ~ condition * classNExpr, data=items_without_probability)
summary(m2)
install.packages("logspline")
library(tidyverse)
filename1 <- "exp_april_2022_RESULTS_2022-05-02-0622.csv"
filename2 <- "exp_april_2022_RESULTS_2022-05-09-0636.csv"
data1 <- read_csv2(filename1)
data2 <- read_csv2(filename2)
summary(data1)
max(data1$participant)
summary(data2)
data2.tmp <- data2 %>%
mutate(data2, participant = participant + max(data1$participant))
data2 <- data2.tmp
summary(data1)
summary(data2)
# data2$demographic1 <- as.numeric(data2$demographic1)
data3 <- bind_rows(data1, data2)
data3.tmp <- data3
data3.tmp$participant <- as.factor(data3.tmp$participant)
levels(data3.tmp$participant) <- paste(1:length(levels(data3.tmp$participant)), sep="")
data3 <- data3.tmp
summary(data3)
write_csv2(data3, "merged_results.csv")
data <- data3
data_demographics <- read_csv2("merged_demographics_cleaned.csv")
summary(data_demographics)
sd(data_demographics$demographic1, na.rm = TRUE)
data_demographics$participant <- as.factor(data_demographics$participant)
data_demographics2 <- data_demographics %>%
select(participant, region_Morava, age_under_27, reading_time_over_60_minutes, demographic1)
data.tmp <- data %>%
left_join(data_demographics2, by = "participant")
summary(data.tmp)
data <- data.tmp
items <- filter(data, grepl("^Accept", materials))
practice <- filter(data, grepl("^Practice", materials))
fillers_good <- filter(data, grepl("^Filler.*Good", materials))
fillers_bad <- filter(data, grepl("^Filler.*Bad", materials))
fillers <- filter(data, grepl("^Filler.*Bad", materials) | grepl("^Filler.*Good", materials))
nrow(fillers_good) + nrow (fillers_bad) == nrow (fillers)
nrow(items) + nrow(practice) + nrow(fillers) == nrow(data)
group_by(fillers, condition) %>%
summarise(mean(rating1), median = median(rating1))
by_participant_and_condition <- group_by(fillers, participant, condition)
diff_fillers <- summarise(by_participant_and_condition, mean = mean(rating1, na.rm=TRUE), SD = sd(rating1, na.rm=TRUE))
diff_fillers.tmp <- summarise(diff_fillers, difference = mean[2]-mean[1])
ggplot(data = diff_fillers.tmp) +
geom_point(mapping = aes(x = participant, y = difference))
vector_for_removing <- filter(diff_fillers.tmp, difference <= 3)
vector_for_removing$participant
clean_items <- filter(items, !(participant %in% vector_for_removing$participant))
clean_fillers <- filter(fillers, !(participant %in% vector_for_removing$participant))
((select(items, participant) %>%
unique %>%
nrow)-(select(clean_items, participant) %>%
unique %>%
nrow)==nrow(vector_for_removing))
items <- clean_items
fillers <- clean_fillers
items <- group_by(items, participant, condition)
items
summarise(items, mean_cond_accept = mean(rating1))
items <- group_by(items, condition)
summarise(items, mean_cond_accept = mean(rating1), median_cond_accept = median(rating1), sd_cond_accept = sd(rating1))
ggplot(items, aes(x = condition, y = rating1)) +
geom_boxplot()
items$classNExpr <- "Z"
items$classNExpr[items$condition == "ABott"|items$condition == "ATop"|items$condition == "basA"|items$condition == "EqA"|items$condition == "NRA"] <- "A"
p <- ggplot(items, aes(condition, rating1, fill = classNExpr)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, size=.3,
width=.2,
position=position_dodge(.9))
p  + labs(y = "acceptability") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17,face="bold"))
ggsave("error_bar.png", p)
items_without_probability <- items %>%
filter((condition != "ABott" & condition != "ATop" & condition != "ZBott" & condition != "ZTop")) %>%
group_by(participant)
p2 <- ggplot(items_without_probability, aes(condition, rating1, fill = classNExpr)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, size=.3,
width=.2,
position=position_dodge(.9))
p2  + labs(y = "acceptability") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17,face="bold"))
ggsave("error_bar_without_prob.png", p2)
ggsave("error_bar_without_prob.eps", p2)
items$condition <- as.factor(items$condition)
levels(items$condition)
library("lmerTest")
items$condition <- relevel(items$condition, ref="basZ")
m1 <- lmer(as.numeric(rating1) ~ condition + (1|participant) + (1|item), data=items)
summary(m1)
summary(items)
(2406/10)*6
items_without_probability <- items %>%
filter((condition != "ABott" & condition != "ATop" & condition != "ZBott" & condition != "ZTop")) %>%
group_by(participant)
items_without_probability$condition <- as.factor(items_without_probability$condition)
items_without_probability$classNExpr <- as.factor(items_without_probability$classNExpr)
levels(items_without_probability$condition)
items_without_probability$condition <- relevel(items_without_probability$condition, ref="basZ")
items_without_probability$condition2 <- "NA"
items_without_probability$condition2[items_without_probability$condition == "basA" | items_without_probability$condition == "basZ"] <- "bas"
items_without_probability$condition2[items_without_probability$condition == "NRA" | items_without_probability$condition == "NRZ"] <- "NR"
items_without_probability$condition2[items_without_probability$condition == "EqA" | items_without_probability$condition == "EqZ"] <- "Eq"
items_without_probability$condition <- items_without_probability$condition2
items_without_probability <- select(items_without_probability, -condition2)
m1 <- lmer(as.numeric(rating1) ~ condition * classNExpr + (1|participant) + (1|item), data=items_without_probability)
summary(m1)
m2 <- lm(as.numeric(rating1) ~ condition * classNExpr, data=items_without_probability)
summary(m2)
library(rstanarm)
library(bayestestR)
items_without_probability$item <- as.factor(items_without_probability$item)
items_without_probability$condition <- as.factor(items_without_probability$condition)
items_without_probability$condition <- relevel(items_without_probability$condition, ref="bas")
items_without_probability$classNExpr <- relevel(items_without_probability$classNExpr, ref="A")
# partial random effects
model_bayes <- stan_glmer(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111)
#model_bayes <- stan_glmer(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111)
print(model_bayes, digits = 3)
describe_posterior(model_bayes)
model_bayes2 <- stan_glmer(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111, prior = used_prior)
used_prior <- c(prior_string("normal(0, 5)", class="Intercept"),
prior_string("normal(0, 5)", class="b"),
prior_string("normal(0, 5)", class="sd", group="participant"), #implicit half-normal; see https://rdrr.io/cran/brms/man/set_prior.html
prior_string("normal(0, 5)", class="sd", group="item")) #implicit half-normal; see https://rdrr.io/cran/brms/man/set_prior.html
model_bayes2 <- stan_glmer(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111, prior = used_prior)
library(brms)
library(brms)
library(brms)
used_prior <- c(prior_string("normal(0, 5)", class="Intercept"),
prior_string("normal(0, 5)", class="b"),
prior_string("normal(0, 5)", class="sd", group="participant"), #implicit half-normal; see https://rdrr.io/cran/brms/man/set_prior.html
prior_string("normal(0, 5)", class="sd", group="item")) #implicit half-normal; see https://rdrr.io/cran/brms/man/set_prior.html
model_bayes2 <- brm(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111, prior = used_prior)
#model_bayes <- stan_glmer(as.numeric(rating1) ~ condition * classNExpr + (1|item) + (1|participant), data=items_without_probability, seed=111)
print(model_bayes2, digits = 3)
describe_posterior(model_bayes2)
plot(describe_posterior(model_bayes2))
